Exercise 1.1
2. C-s H T M L
3. C-s s c a v e n g e r
4. C-s s e l f - r e f e r e n t i a l
5. C-s a r r o w 
6. C-e
7. C-a
10. C-x-c

Exercise 1.2
2. C-s <!-
C-a
C-k

3. C-s <!-
C-a
C-k

4. C-s <!-
C-a
M-h
C-w

5. C-s <!-
C-b C-b C-b
M-z >

C-s <!-
C-a
RET
M-h M-h
C-w

C-s <!-
C-a
C-k

Exercise 1.3
2. C-s A s s i g n m e n t SP 1
RET
BKSP
42

C-s A s s i g n m e n t SP 1
RET
BKSP
42

3. C-r utf
RET
M-z 8
U S - A S C I I 
 
4. M-x q u e r y SP r e p l a c e SP r e g e x p
[ ^ [ : a s c i i : ] ] RET
RET
!

6. C-s </ol>
C-e
RET

Exercise 1.4
4. M->
C-r <
C-SPC
C-e
C-w
M-g g 397
C-y

4. M->
C-r <!
C-SPC
C-n C-n C-n
C-e
C-w
M-g g 383
C-y RET
C-y

M->
C-r <!
RET
m-z >
M-g g 382
C-e
C-b C-b C-b C-b
C-y

M->
C-r <!
C-SPC
C-n C-n 
C-e
C-w
M-g g 140
C-y
RET RET

M->
C-r <!
C-SPC
C-e
C-w
M-g g 127
C-y

M->
C-r <!
C-SPC
C-e
C-w
M-g g 127
C-y

5. M->
C-r 18 C-r
C-SPC
M-h
C-w

6. C-x u

7. C-SPC
M->
M-;

8. M-<
M-% <ol> RET
<oL> RET
!

Exercise 1.5
1. M-x m a k e - d i r e c t o r y RET
junk RET

2. C-x C-f junk/hello.c

3. M-x compile 
g c c SP - o SP h e l l o SP h e l l o . c 

5. M-x c o m p i l e RET
. / h e l l o RET
C-x RET
C-x C-w h e l l o - o u t RET

C-x i k e y 1 . t x t RET
C-x C-w k e y 1 . t x t RET

-*- mode: compilation; default-directory: "~/cs35l/hw1/junk/" -*-
Compilation started at Sun Oct  7 10:19:25

./hello
#include <stdio.h>
int
main (void)
{
  char n = '\n', b = '\\', q = '"';
  char const *p = "#include <stdio.h>%cint%cmain (void)%c{%c  char n = '%cn', b = '%c%c', q = '%c';%c  char const *p = %c%s%c;%c  printf (p, n, n, n, n, b, b, b, q, n, q, p, q, n, n, n, n);%c  return 0;%c}%c";
  printf (p, n, n, n, n, b, b, b, q, n, q, p, q, n, n, n, n);
  return 0;
}

Compilation finished at Sun Oct  7 10:19:25

Exercise 1.6
1. C-x b RET
2. ( r a n d o m " 9 0 4 - 9 8 2 - 6 4 4 " ) C-j
-2207030908685235739

3. (setq x (random))
-1904747338688753240
(setq y (random))
1468697697283256244

4. (* x y)
476980969163080224
The value is not correct, it should be a negative number

5. M-: (* SP x SP y ) RET
476980969163080224
There's no difference.

6. The integers are not truly random in the mathematical sense because the computer has to use some type of algorithm to generate these numbers, meaning there is a way to decode the "randomness"

7. Since the product will always be mathematically incorrect when there is either a positive or negative overflow, the probability is accounted for by (1- 1/(first number).  
Add all the numbers up together, the probability nears closer and closer to 1, that it becomes that the product of the two numbers is almost always 1. 